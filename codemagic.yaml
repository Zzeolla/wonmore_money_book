workflows:
  ios_release:
    name: iOS Release (Flutter + verbose upload)
    instance_type: mac_mini_m2
    max_build_duration: 60

    environment:
      flutter: 3.29.2
      xcode: 16.4
      cocoapods: default
      groups:
        - env   # <- Codemagic UI에서 만든 variable group 이름 그대로
      vars:
        # 앱 번들 ID (App Store Connect와 동일)
        BUNDLE_ID: com.zlabo.wonmoremoneybook

    scripts:
      - name: Pre-build (.env write)
        script: |
          set -euxo pipefail
          echo "SUPABASE_URL=$SUPABASE_URL" >> .env
          echo "SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY" >> .env
          echo "ADMOB_BANNER_ID_ANDROID=$ADMOB_BANNER_ID_ANDROID" >> .env
          echo "ADMOB_BANNER_ID_IOS=$ADMOB_BANNER_ID_IOS" >> .env
          echo "ADMOB_REWARDED_ID_ANDROID=$ADMOB_REWARDED_ID_ANDROID" >> .env
          echo "ADMOB_REWARDED_ID_IOS=$ADMOB_REWARDED_ID_IOS" >> .env

      - name: Prepare iOS code signing (automatic)
        script: |
          set -euxo pipefail
          # App Store Connect API Key 3종을 직접 넘겨주어 통합 없이도 동작하게 함
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_ID" \
            --private-key @env:APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY
          keychain add-certificates
          xcode-project use-profiles

      - name: Flutter build IPA (Release)
        script: |
          set -euxo pipefail
          flutter clean
          flutter pub get
          : "${BUILD_NUMBER:=1}"
          EXPORT_PLIST="${HOME}/export_options.plist"
          [ -f "$EXPORT_PLIST" ] || EXPORT_PLIST="/Users/builder/export_options.plist"
          flutter build ipa --release \
            --build-number="$BUILD_NUMBER" \
            --export-options-plist "$EXPORT_PLIST"

      - name: Publish to App Store Connect (verbose)
        script: |
          #!/usr/bin/env bash
          set -euxo pipefail

          : "${APP_STORE_CONNECT_KEY_ID:?Set APP_STORE_CONNECT_KEY_ID in Environment variables}"
          : "${APP_STORE_CONNECT_ISSUER_ID:?Set APP_STORE_CONNECT_ISSUER_ID in Environment variables}"
          : "${APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY:?Set APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY (multiline)}"

          CANDIDATES=()
          [ -n "${CM_EXPORT_DIR:-}" ] && CANDIDATES+=("$CM_EXPORT_DIR/App.ipa")
          [ -n "${CM_BUILD_DIR:-}" ] && CANDIDATES+=("$CM_BUILD_DIR/build/ios/ipa/App.ipa")
          CANDIDATES+=("/Users/builder/clone/build/ios/ipa/App.ipa")

          IPA=""
          for p in "${CANDIDATES[@]}"; do
            [ -f "$p" ] && IPA="$p" && break
          done
          [ -z "$IPA" ] && IPA="$(/usr/bin/find /Users/builder -type f -name '*.ipa' -print -quit || true)"

          [ -n "$IPA" ] && [ -f "$IPA" ] || { echo "❌ IPA not found. Checked: ${CANDIDATES[*]}"; exit 1; }
          echo "✅ Found IPA at: $IPA"

          TMP_DIR="$(mktemp -d)"
          unzip -q "$IPA" -d "$TMP_DIR"
          PLIST="$(find "$TMP_DIR/Payload" -type f -path '*/.app/Info.plist' | head -1 || true)"
          if [ -n "$PLIST" ]; then
            echo "ℹ️ From App .app/Info.plist:"
            /usr/libexec/PlistBuddy -c 'Print :CFBundleIdentifier' "$PLIST" || true
            /usr/libexec/PlistBuddy -c 'Print :CFBundleShortVersionString' "$PLIST" || true
            /usr/libexec/PlistBuddy -c 'Print :CFBundleVersion' "$PLIST" || true
          else
            echo "❌ App .app/Info.plist not found. Not a valid app IPA."
            exit 2
          fi

          app-store-connect publish \
            --path "$IPA" \
            --key-id "$APP_STORE_CONNECT_KEY_ID" \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --private-key @env:APP_STORE_CONNECT_PUBLISHER_PRIVATE_KEY \
            --verbose

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/ipa/*.dSYM.zip
