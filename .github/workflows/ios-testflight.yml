name: iOS → TestFlight

on:
  workflow_dispatch:   # 수동 실행
  push:
    tags:
      - 'ios-v*'       # 예: ios-v1.0.0

jobs:
  build-and-upload:
    runs-on: macos-latest

    steps:
      # 1. 소스코드 가져오기
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Flutter 세팅
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'

      # 3. 패키지 복원
      - name: Flutter pub get
        run: flutter pub get

      # 4. .env 파일 생성 (Secrets → 실제 .env 파일로)
      - name: Create .env from secret
        run: |
          rm -f .env
          cat > .env << 'EOF'
          ${{ secrets.APP_ENV_FILE }}
          EOF

      # 5. 배포 인증서 설치 (p12)
      - name: Import code signing certs
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.APPSTORE_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.APPSTORE_CERTIFICATES_PASSWORD }}

      # 6. 프로비저닝 프로파일 자동 다운로드
      - name: Download provisioning profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ vars.BUNDLE_ID }}
          profile-type: IOS_APP_STORE
          issuer-id: ${{ vars.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ vars.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      # ✅ Podfile 없으면 여기서 만들어 줌 (Pod install 전에 위치해야 함)
      - name: Ensure Podfile (iOS 15.0)
        run: |
          mkdir -p ios
          cat > ios/Podfile <<'POD'
          platform :ios, '15.0'
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          use_frameworks! :linkage => :static
          use_modular_headers!

          require_relative 'Flutter/podhelper'
          
          flutter_ios_podfile_setup

          target 'Runner' do
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            flutter_additional_ios_build_settings(installer)
            # 모든 Pods에도 15.0 강제
            installer.pods_project.targets.each do |t|
              t.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
              end
            end
          end
          POD

      # 7. (필요 시) CocoaPods 업데이트
      - name: Pod install (if needed)
        run: |
          cd ios
          pod install --repo-update || true
          cd ..

      - name: Keychains / Identities (debug)
        run: |
          security list-keychains
          security find-identity -p codesigning -v || true
      
      - name: Provisioning profiles (debug)
        run: |
          ls -al ~/Library/MobileDevice/Provisioning\ Profiles || true
          uuid=$(grep -A1 UUID ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision | head -n1 | sed 's/.*<string>\(.*\)<\/string>.*/\1/')
          echo "One UUID: $uuid" || true

      - name: Effective signing settings (debug)
        run: |
          xcodebuild -showBuildSettings \
            -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination 'generic/platform=iOS' | \
            /usr/bin/grep -E "DEVELOPMENT_TEAM|CODE_SIGN|PRODUCT_BUNDLE_IDENTIFIER|PROVISIONING_PROFILE_SPECIFIER" || true

      # (선택) 명시적으로 Xcode 버전 고정 — macos-14 러너는 Xcode 16 계열
      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'
      
      # iOS 플랫폼 런타임 설치 (iOS 18.0)
      - name: Install iOS platform runtime
        run: |
          sudo xcodebuild -downloadPlatform iOS
          sudo xcodebuild -runFirstLaunch || true

      # 8. IPA 빌드
      - name: Build IPA
        run: flutter build ipa --dart-define=USE_TEST_ADS=false --release --export-options-plist=ios/exportOptions.plist --build-number $GITHUB_RUN_NUMBER

      # (새 스텝) IPA 경로 찾기
      - name: Locate IPA
        id: locate_ipa
        run: |
          set -e
          ls -al build/ios/ipa || true
          IPA_PATH=$(ls -1 build/ios/ipa/*.ipa | head -n 1)
          if [ -z "$IPA_PATH" ]; then
            echo "No IPA found under build/ios/ipa"
            exit 1
          fi
          echo "Found IPA: $IPA_PATH"
          echo "ipa_path=$IPA_PATH" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ${{ steps.locate_ipa.outputs.ipa_path }}

      # (기존 스텝 수정) TestFlight 업로드
      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v3
        with:
          app-path: ${{ steps.locate_ipa.outputs.ipa_path }}
          issuer-id: ${{ vars.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ vars.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
